registers: [Null, Null, Null]
stack: 2 frame: 0
frame contents: [Null, Null]
stack context: 0
instruction: SetRaw { location: Register(Return), value: Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }) }
instruction index: 37
-----------
registers: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null]
stack: 2 frame: 0
frame contents: [Null, Null]
stack context: 0
instruction: Assign { from: Register(Return), to: Stack(1) }
instruction index: 38
-----------
registers: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null]
stack: 2 frame: 0
frame contents: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static })]
stack context: 0
instruction: PushRaw(Null)
instruction index: 39
-----------
registers: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null]
stack: 3 frame: 0
frame contents: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null]
stack context: 0
instruction: PushRaw(Null)
instruction index: 40
-----------
registers: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null]
stack: 4 frame: 0
frame contents: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null]
stack context: 0
instruction: SetRaw { location: Register(Return), value: Int(1) }
instruction index: 41
-----------
registers: [Int(1), Null, Null]
stack: 4 frame: 0
frame contents: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null]
stack context: 0
instruction: Push(Register(Return))
instruction index: 42
-----------
registers: [Int(1), Null, Null]
stack: 5 frame: 0
frame contents: [Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Function(FunctionRef { arg_count: 1, stack_size: 2, location: 25, function_type: Static }), Null, Null, Int(1)]
stack context: 0
instruction: Invoke { arg_count: 1, stack_size: 2, instruction: 25 }
instruction index: 43
-----------
    registers: [Int(1), Null, Null]
    stack: 5 frame: 3
    frame contents: [Null, Int(1)]
    stack context: 1
    instruction: PushRaw(Null)
    instruction index: 25
    -----------
    registers: [Int(1), Null, Null]
    stack: 6 frame: 3
    frame contents: [Null, Int(1), Null]
    stack context: 1
    instruction: Assign { from: Stack(1), to: Register(Return) }
    instruction index: 26
    -----------
    registers: [Int(1), Null, Null]
    stack: 6 frame: 3
    frame contents: [Null, Int(1), Null]
    stack context: 1
    instruction: Move { from: Register(Return), to: Stack(0) }
    instruction index: 27
    -----------
    registers: [Null, Null, Null]
    stack: 6 frame: 3
    frame contents: [Int(1), Int(1), Null]
    stack context: 1
    instruction: SetRaw { location: Register(Return), value: Int(1) }
    instruction index: 28
    -----------
    registers: [Int(1), Null, Null]
    stack: 6 frame: 3
    frame contents: [Int(1), Int(1), Null]
    stack context: 1
    instruction: BinaryOperation { operator: Gt, left: Stack(0), right: Register(Return) }
    instruction index: 29
    -----------
    registers: [Bool(false), Null, Null]
    stack: 6 frame: 3
    frame contents: [Int(1), Int(1), Null]
    stack context: 1
    instruction: Push(Register(Return))
    instruction index: 30
    -----------
    registers: [Bool(false), Null, Null]
    stack: 7 frame: 3
    frame contents: [Int(1), Int(1), Null, Bool(false)]
    stack context: 1
    instruction: SetRaw { location: Register(Return), value: Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) }) }
    instruction index: 31
    -----------
    registers: [Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) }), Null, Null]
    stack: 7 frame: 3
    frame contents: [Int(1), Int(1), Null, Bool(false)]
    stack context: 1
    instruction: Push(Register(Return))
    instruction index: 32
    -----------
    registers: [Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) }), Null, Null]
    stack: 8 frame: 3
    frame contents: [Int(1), Int(1), Null, Bool(false), Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) })]
    stack context: 1
    instruction: SetRaw { location: Register(Return), value: Function(FunctionRef { arg_count: 0, stack_size: 2, location: 19, function_type: CapturingDef([1]) }) }
    instruction index: 33
    -----------
    registers: [Function(FunctionRef { arg_count: 0, stack_size: 2, location: 19, function_type: CapturingDef([1]) }), Null, Null]
    stack: 8 frame: 3
    frame contents: [Int(1), Int(1), Null, Bool(false), Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) })]
    stack context: 1
    instruction: Push(Register(Return))
    instruction index: 34
    -----------
    registers: [Function(FunctionRef { arg_count: 0, stack_size: 2, location: 19, function_type: CapturingDef([1]) }), Null, Null]
    stack: 9 frame: 3
    frame contents: [Int(1), Int(1), Null, Bool(false), Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) }), Function(FunctionRef { arg_count: 0, stack_size: 2, location: 19, function_type: CapturingDef([1]) })]
    stack context: 1
    instruction: Invoke { arg_count: 3, stack_size: 4, instruction: 21 }
    instruction index: 35
    -----------
        registers: [Function(FunctionRef { arg_count: 0, stack_size: 2, location: 19, function_type: CapturingDef([1]) }), Null, Null]
        stack: 9 frame: 5
        frame contents: [Null, Bool(false), Function(FunctionRef { arg_count: 0, stack_size: 2, location: 0, function_type: CapturingDef([1]) }), Function(FunctionRef { arg_count: 0, stack_size: 2, location: 19, function_type: CapturingDef([1]) })]
        stack context: 2
        instruction: InvokeNative { arg_count: 3 }
        instruction index: 21
        -----------